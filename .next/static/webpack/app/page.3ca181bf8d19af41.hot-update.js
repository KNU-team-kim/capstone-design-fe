"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/utils/signaling.ts":
/*!********************************!*\
  !*** ./src/utils/signaling.ts ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   closeSignalingServer: () => (/* binding */ closeSignalingServer),\n/* harmony export */   connectSignalingServer: () => (/* binding */ connectSignalingServer),\n/* harmony export */   sendMessage: () => (/* binding */ sendMessage)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nconst signalingServerUrl = \"ws://15.164.163.252:8080/signaling\";\nif (!signalingServerUrl) {\n    throw new Error('NEXT_PUBLIC_SIGNALING_SERVER_URL is not defined');\n}\nconst connectSignalingServer = (onMessage)=>{\n    const [socket, setSocket] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    if (!socket) {\n        const newSocket = new WebSocket(signalingServerUrl);\n        newSocket.onopen = ()=>console.log('WebSocket 연결이 열렸습니다.');\n        newSocket.onmessage = (event)=>onMessage(JSON.parse(event.data));\n        newSocket.onclose = ()=>{\n            console.log('WebSocket 연결이 종료되었습니다.');\n            setSocket(null);\n        };\n        newSocket.onerror = (error)=>console.error('WebSocket 오류:', error);\n        setSocket(newSocket);\n    }\n    return socket;\n};\nconst sendMessage = (message)=>{\n    const socket = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(socket);\n    if (socket && socket.readyState === WebSocket.OPEN) {\n        socket.send(JSON.stringify(message));\n    }\n};\nconst closeSignalingServer = ()=>{\n    const socket = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(socket);\n    if (socket) {\n        socket.close();\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy91dGlscy9zaWduYWxpbmcudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBaUM7QUFFakMsTUFBTUMscUJBQXFCQyxvQ0FBNEM7QUFFdkUsSUFBSSxDQUFDRCxvQkFBb0I7SUFDdkIsTUFBTSxJQUFJSSxNQUFNO0FBQ2xCO0FBT08sTUFBTUMseUJBQXlCLENBQUNDO0lBQ3JDLE1BQU0sQ0FBQ0MsUUFBUUMsVUFBVSxHQUFHVCwrQ0FBUUEsQ0FBbUI7SUFFdkQsSUFBSSxDQUFDUSxRQUFRO1FBQ1gsTUFBTUUsWUFBWSxJQUFJQyxVQUFVVjtRQUVoQ1MsVUFBVUUsTUFBTSxHQUFHLElBQU1DLFFBQVFDLEdBQUcsQ0FBQztRQUNyQ0osVUFBVUssU0FBUyxHQUFHLENBQUNDLFFBQVVULFVBQVVVLEtBQUtDLEtBQUssQ0FBQ0YsTUFBTUcsSUFBSTtRQUNoRVQsVUFBVVUsT0FBTyxHQUFHO1lBQ2xCUCxRQUFRQyxHQUFHLENBQUM7WUFDWkwsVUFBVTtRQUNaO1FBQ0FDLFVBQVVXLE9BQU8sR0FBRyxDQUFDQyxRQUFVVCxRQUFRUyxLQUFLLENBQUMsaUJBQWlCQTtRQUM5RGIsVUFBVUM7SUFDWjtJQUNBLE9BQU9GO0FBQ1QsRUFBRTtBQUVLLE1BQU1lLGNBQWMsQ0FBQ0M7SUFDMUIsTUFBTWhCLFNBQVNSLCtDQUFRQSxDQUFDUTtJQUN4QixJQUFJQSxVQUFVQSxPQUFPaUIsVUFBVSxLQUFLZCxVQUFVZSxJQUFJLEVBQUU7UUFDbERsQixPQUFPbUIsSUFBSSxDQUFDVixLQUFLVyxTQUFTLENBQUNKO0lBQzdCO0FBQ0YsRUFBRTtBQUVLLE1BQU1LLHVCQUF1QjtJQUNsQyxNQUFNckIsU0FBU1IsK0NBQVFBLENBQUNRO0lBQ3hCLElBQUlBLFFBQVE7UUFDVkEsT0FBT3NCLEtBQUs7SUFDZDtBQUNGLEVBQUUiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qZW9uZ3NvbGJpbi9jYXBzdG9uZS1kZXNpZ24tZmUvc3JjL3V0aWxzL3NpZ25hbGluZy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuXG5jb25zdCBzaWduYWxpbmdTZXJ2ZXJVcmwgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TSUdOQUxJTkdfU0VSVkVSX1VSTDtcblxuaWYgKCFzaWduYWxpbmdTZXJ2ZXJVcmwpIHtcbiAgdGhyb3cgbmV3IEVycm9yKCdORVhUX1BVQkxJQ19TSUdOQUxJTkdfU0VSVkVSX1VSTCBpcyBub3QgZGVmaW5lZCcpO1xufVxuXG50eXBlIFNpZ25hbGluZ01lc3NhZ2UgPSBcbiAgfCB7IHR5cGU6ICdvZmZlcic7IG9mZmVyOiBSVENTZXNzaW9uRGVzY3JpcHRpb25Jbml0IH1cbiAgfCB7IHR5cGU6ICdhbnN3ZXInOyBhbnN3ZXI6IFJUQ1Nlc3Npb25EZXNjcmlwdGlvbkluaXQgfVxuICB8IHsgdHlwZTogJ2ljZS1jYW5kaWRhdGUnOyBjYW5kaWRhdGU6IFJUQ0ljZUNhbmRpZGF0ZUluaXQgfTtcblxuZXhwb3J0IGNvbnN0IGNvbm5lY3RTaWduYWxpbmdTZXJ2ZXIgPSAob25NZXNzYWdlOiAobWVzc2FnZTogU2lnbmFsaW5nTWVzc2FnZSkgPT4gdm9pZCkgPT4ge1xuICBjb25zdCBbc29ja2V0LCBzZXRTb2NrZXRdID0gdXNlU3RhdGU8V2ViU29ja2V0IHwgbnVsbD4obnVsbCk7XG5cbiAgaWYgKCFzb2NrZXQpIHtcbiAgICBjb25zdCBuZXdTb2NrZXQgPSBuZXcgV2ViU29ja2V0KHNpZ25hbGluZ1NlcnZlclVybCk7XG5cbiAgICBuZXdTb2NrZXQub25vcGVuID0gKCkgPT4gY29uc29sZS5sb2coJ1dlYlNvY2tldCDsl7DqsrDsnbQg7Je066C47Iq164uI64ukLicpO1xuICAgIG5ld1NvY2tldC5vbm1lc3NhZ2UgPSAoZXZlbnQpID0+IG9uTWVzc2FnZShKU09OLnBhcnNlKGV2ZW50LmRhdGEpKTtcbiAgICBuZXdTb2NrZXQub25jbG9zZSA9ICgpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKCdXZWJTb2NrZXQg7Jew6rKw7J20IOyiheujjOuQmOyXiOyKteuLiOuLpC4nKTtcbiAgICAgIHNldFNvY2tldChudWxsKTtcbiAgICB9O1xuICAgIG5ld1NvY2tldC5vbmVycm9yID0gKGVycm9yKSA9PiBjb25zb2xlLmVycm9yKCdXZWJTb2NrZXQg7Jik66WYOicsIGVycm9yKTtcbiAgICBzZXRTb2NrZXQobmV3U29ja2V0KTtcbiAgfVxuICByZXR1cm4gc29ja2V0O1xufTtcblxuZXhwb3J0IGNvbnN0IHNlbmRNZXNzYWdlID0gKG1lc3NhZ2U6IFNpZ25hbGluZ01lc3NhZ2UpOiB2b2lkID0+IHtcbiAgY29uc3Qgc29ja2V0ID0gdXNlU3RhdGUoc29ja2V0KTtcbiAgaWYgKHNvY2tldCAmJiBzb2NrZXQucmVhZHlTdGF0ZSA9PT0gV2ViU29ja2V0Lk9QRU4pIHtcbiAgICBzb2NrZXQuc2VuZChKU09OLnN0cmluZ2lmeShtZXNzYWdlKSk7XG4gIH1cbn07XG5cbmV4cG9ydCBjb25zdCBjbG9zZVNpZ25hbGluZ1NlcnZlciA9ICgpID0+IHtcbiAgY29uc3Qgc29ja2V0ID0gdXNlU3RhdGUoc29ja2V0KTtcbiAgaWYgKHNvY2tldCkge1xuICAgIHNvY2tldC5jbG9zZSgpO1xuICB9XG59O1xuIl0sIm5hbWVzIjpbInVzZVN0YXRlIiwic2lnbmFsaW5nU2VydmVyVXJsIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX1NJR05BTElOR19TRVJWRVJfVVJMIiwiRXJyb3IiLCJjb25uZWN0U2lnbmFsaW5nU2VydmVyIiwib25NZXNzYWdlIiwic29ja2V0Iiwic2V0U29ja2V0IiwibmV3U29ja2V0IiwiV2ViU29ja2V0Iiwib25vcGVuIiwiY29uc29sZSIsImxvZyIsIm9ubWVzc2FnZSIsImV2ZW50IiwiSlNPTiIsInBhcnNlIiwiZGF0YSIsIm9uY2xvc2UiLCJvbmVycm9yIiwiZXJyb3IiLCJzZW5kTWVzc2FnZSIsIm1lc3NhZ2UiLCJyZWFkeVN0YXRlIiwiT1BFTiIsInNlbmQiLCJzdHJpbmdpZnkiLCJjbG9zZVNpZ25hbGluZ1NlcnZlciIsImNsb3NlIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/utils/signaling.ts\n"));

/***/ })

});