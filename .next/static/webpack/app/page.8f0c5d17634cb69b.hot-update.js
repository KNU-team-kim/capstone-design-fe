"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/hooks/useWebRTC.ts":
/*!********************************!*\
  !*** ./src/hooks/useWebRTC.ts ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useWebRTC: () => (/* binding */ useWebRTC)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_signaling__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/utils/signaling */ \"(app-pages-browser)/./src/utils/signaling.ts\");\n\n\nconst iceServers = {\n    iceServers: [\n        {\n            urls: 'stun:stun.l.google.com:19302'\n        }\n    ]\n};\nconst useWebRTC = ()=>{\n    const [isConnected, setIsConnected] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const videoRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const peerConnection = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useWebRTC.useEffect\": ()=>{\n            const handleSignalingMessage = {\n                \"useWebRTC.useEffect.handleSignalingMessage\": async (message)=>{\n                    switch(message.type){\n                        case 'offer':\n                            var _peerConnection_current, _peerConnection_current1, _peerConnection_current2;\n                            await ((_peerConnection_current = peerConnection.current) === null || _peerConnection_current === void 0 ? void 0 : _peerConnection_current.setRemoteDescription(new RTCSessionDescription(message.offer)));\n                            const answer = await ((_peerConnection_current1 = peerConnection.current) === null || _peerConnection_current1 === void 0 ? void 0 : _peerConnection_current1.createAnswer());\n                            await ((_peerConnection_current2 = peerConnection.current) === null || _peerConnection_current2 === void 0 ? void 0 : _peerConnection_current2.setLocalDescription(answer));\n                            if (answer) {\n                                (0,_utils_signaling__WEBPACK_IMPORTED_MODULE_1__.sendMessage)({\n                                    type: 'answer',\n                                    answer\n                                });\n                            }\n                            break;\n                        case 'answer':\n                            var _peerConnection_current3;\n                            await ((_peerConnection_current3 = peerConnection.current) === null || _peerConnection_current3 === void 0 ? void 0 : _peerConnection_current3.setRemoteDescription(new RTCSessionDescription(message.answer)));\n                            break;\n                        case 'ice-candidate':\n                            var _peerConnection_current4;\n                            const candidate = new RTCIceCandidate(message.candidate);\n                            await ((_peerConnection_current4 = peerConnection.current) === null || _peerConnection_current4 === void 0 ? void 0 : _peerConnection_current4.addIceCandidate(candidate));\n                            break;\n                        default:\n                            break;\n                    }\n                }\n            }[\"useWebRTC.useEffect.handleSignalingMessage\"];\n            const socket = (0,_utils_signaling__WEBPACK_IMPORTED_MODULE_1__.connectSignalingServer)(handleSignalingMessage);\n            setIsConnected(!!socket);\n            peerConnection.current = new RTCPeerConnection(iceServers);\n            const getWebcamStream = {\n                \"useWebRTC.useEffect.getWebcamStream\": async ()=>{\n                    try {\n                        const stream = await navigator.mediaDevices.getUserMedia({\n                            video: true\n                        });\n                        if (videoRef.current) videoRef.current.srcObject = stream;\n                        stream.getTracks().forEach({\n                            \"useWebRTC.useEffect.getWebcamStream\": (track)=>{\n                                var _peerConnection_current;\n                                if (((_peerConnection_current = peerConnection.current) === null || _peerConnection_current === void 0 ? void 0 : _peerConnection_current.signalingState) !== 'closed') {\n                                    var _peerConnection_current1;\n                                    (_peerConnection_current1 = peerConnection.current) === null || _peerConnection_current1 === void 0 ? void 0 : _peerConnection_current1.addTrack(track, stream);\n                                }\n                            }\n                        }[\"useWebRTC.useEffect.getWebcamStream\"]);\n                    } catch (err) {\n                        console.error('웹캠 접근 오류:', err);\n                    }\n                }\n            }[\"useWebRTC.useEffect.getWebcamStream\"];\n            getWebcamStream();\n            return ({\n                \"useWebRTC.useEffect\": ()=>{\n                    if (peerConnection.current) {\n                        peerConnection.current.close();\n                    }\n                    (0,_utils_signaling__WEBPACK_IMPORTED_MODULE_1__.closeSignalingServer)();\n                }\n            })[\"useWebRTC.useEffect\"];\n        }\n    }[\"useWebRTC.useEffect\"], []);\n    return {\n        videoRef,\n        isConnected\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9ob29rcy91c2VXZWJSVEMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFvRDtBQUUwQztBQUc5RixNQUFNTSxhQUFhO0lBQ2pCQSxZQUFZO1FBQUM7WUFBRUMsTUFBTTtRQUErQjtLQUFFO0FBQ3hEO0FBRU8sTUFBTUMsWUFBWTtJQUN2QixNQUFNLENBQUNDLGFBQWFDLGVBQWUsR0FBR1IsK0NBQVFBLENBQUM7SUFDL0MsTUFBTVMsV0FBV1YsNkNBQU1BLENBQTBCO0lBQ2pELE1BQU1XLGlCQUFpQlgsNkNBQU1BLENBQTJCO0lBRXhERCxnREFBU0E7K0JBQUM7WUFDUixNQUFNYTs4REFBeUIsT0FBT0M7b0JBQ3BDLE9BQVFBLFFBQVFDLElBQUk7d0JBQ2xCLEtBQUs7Z0NBQ0dILHlCQUNlQSwwQkFDZkE7NEJBRk4sUUFBTUEsMEJBQUFBLGVBQWVJLE9BQU8sY0FBdEJKLDhDQUFBQSx3QkFBd0JLLG9CQUFvQixDQUFDLElBQUlDLHNCQUFzQkosUUFBUUssS0FBSzs0QkFDMUYsTUFBTUMsU0FBUyxRQUFNUiwyQkFBQUEsZUFBZUksT0FBTyxjQUF0QkosK0NBQUFBLHlCQUF3QlMsWUFBWTs0QkFDekQsUUFBTVQsMkJBQUFBLGVBQWVJLE9BQU8sY0FBdEJKLCtDQUFBQSx5QkFBd0JVLG1CQUFtQixDQUFDRjs0QkFDbEQsSUFBSUEsUUFBUTtnQ0FDVmhCLDZEQUFXQSxDQUFDO29DQUFFVyxNQUFNO29DQUFVSztnQ0FBTzs0QkFDdkM7NEJBQ0E7d0JBQ0YsS0FBSztnQ0FDR1I7NEJBQU4sUUFBTUEsMkJBQUFBLGVBQWVJLE9BQU8sY0FBdEJKLCtDQUFBQSx5QkFBd0JLLG9CQUFvQixDQUFDLElBQUlDLHNCQUFzQkosUUFBUU0sTUFBTTs0QkFDM0Y7d0JBQ0YsS0FBSztnQ0FFR1I7NEJBRE4sTUFBTVcsWUFBWSxJQUFJQyxnQkFBZ0JWLFFBQVFTLFNBQVM7NEJBQ3ZELFFBQU1YLDJCQUFBQSxlQUFlSSxPQUFPLGNBQXRCSiwrQ0FBQUEseUJBQXdCYSxlQUFlLENBQUNGOzRCQUM5Qzt3QkFDRjs0QkFDRTtvQkFDSjtnQkFDRjs7WUFFQSxNQUFNRyxTQUFTdkIsd0VBQXNCQSxDQUFDVTtZQUN0Q0gsZUFBZSxDQUFDLENBQUNnQjtZQUVqQmQsZUFBZUksT0FBTyxHQUFHLElBQUlXLGtCQUFrQnJCO1lBRS9DLE1BQU1zQjt1REFBa0I7b0JBQ3RCLElBQUk7d0JBQ0YsTUFBTUMsU0FBUyxNQUFNQyxVQUFVQyxZQUFZLENBQUNDLFlBQVksQ0FBQzs0QkFBRUMsT0FBTzt3QkFBSzt3QkFDdkUsSUFBSXRCLFNBQVNLLE9BQU8sRUFBRUwsU0FBU0ssT0FBTyxDQUFDa0IsU0FBUyxHQUFHTDt3QkFFbkRBLE9BQU9NLFNBQVMsR0FBR0MsT0FBTzttRUFBQyxDQUFDQztvQ0FDdEJ6QjtnQ0FBSixJQUFJQSxFQUFBQSwwQkFBQUEsZUFBZUksT0FBTyxjQUF0QkosOENBQUFBLHdCQUF3QjBCLGNBQWMsTUFBSyxVQUFVO3dDQUN2RDFCO3FDQUFBQSwyQkFBQUEsZUFBZUksT0FBTyxjQUF0QkosK0NBQUFBLHlCQUF3QjJCLFFBQVEsQ0FBQ0YsT0FBT1I7Z0NBQzFDOzRCQUNGOztvQkFDRixFQUFFLE9BQU9XLEtBQUs7d0JBQ1pDLFFBQVFDLEtBQUssQ0FBQyxhQUFhRjtvQkFDN0I7Z0JBQ0Y7O1lBRUFaO1lBRUE7dUNBQU87b0JBQ0wsSUFBSWhCLGVBQWVJLE9BQU8sRUFBRTt3QkFDMUJKLGVBQWVJLE9BQU8sQ0FBQzJCLEtBQUs7b0JBQzlCO29CQUNBdEMsc0VBQW9CQTtnQkFDdEI7O1FBQ0Y7OEJBQUcsRUFBRTtJQUVMLE9BQU87UUFBRU07UUFBVUY7SUFBWTtBQUNqQyxFQUFFIiwic291cmNlcyI6WyIvVXNlcnMvamVvbmdzb2xiaW4vY2Fwc3RvbmUtZGVzaWduLWZlL3NyYy9ob29rcy91c2VXZWJSVEMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VSZWYsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgeyBjb25uZWN0U2lnbmFsaW5nU2VydmVyLCBzZW5kTWVzc2FnZSwgY2xvc2VTaWduYWxpbmdTZXJ2ZXIgfSBmcm9tICdAL3V0aWxzL3NpZ25hbGluZyc7XG5pbXBvcnQgeyBTaWduYWxpbmdNZXNzYWdlIH0gZnJvbSAnQC90eXBlcy9zaWduYWxpbmcnO1xuXG5jb25zdCBpY2VTZXJ2ZXJzID0ge1xuICBpY2VTZXJ2ZXJzOiBbeyB1cmxzOiAnc3R1bjpzdHVuLmwuZ29vZ2xlLmNvbToxOTMwMicgfV0sXG59O1xuXG5leHBvcnQgY29uc3QgdXNlV2ViUlRDID0gKCkgPT4ge1xuICBjb25zdCBbaXNDb25uZWN0ZWQsIHNldElzQ29ubmVjdGVkXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgdmlkZW9SZWYgPSB1c2VSZWY8SFRNTFZpZGVvRWxlbWVudCB8IG51bGw+KG51bGwpO1xuICBjb25zdCBwZWVyQ29ubmVjdGlvbiA9IHVzZVJlZjxSVENQZWVyQ29ubmVjdGlvbiB8IG51bGw+KG51bGwpO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgaGFuZGxlU2lnbmFsaW5nTWVzc2FnZSA9IGFzeW5jIChtZXNzYWdlOiBTaWduYWxpbmdNZXNzYWdlICkgPT4ge1xuICAgICAgc3dpdGNoIChtZXNzYWdlLnR5cGUpIHtcbiAgICAgICAgY2FzZSAnb2ZmZXInOlxuICAgICAgICAgIGF3YWl0IHBlZXJDb25uZWN0aW9uLmN1cnJlbnQ/LnNldFJlbW90ZURlc2NyaXB0aW9uKG5ldyBSVENTZXNzaW9uRGVzY3JpcHRpb24obWVzc2FnZS5vZmZlcikpO1xuICAgICAgICAgIGNvbnN0IGFuc3dlciA9IGF3YWl0IHBlZXJDb25uZWN0aW9uLmN1cnJlbnQ/LmNyZWF0ZUFuc3dlcigpO1xuICAgICAgICAgIGF3YWl0IHBlZXJDb25uZWN0aW9uLmN1cnJlbnQ/LnNldExvY2FsRGVzY3JpcHRpb24oYW5zd2VyKTtcbiAgICAgICAgICBpZiAoYW5zd2VyKSB7XG4gICAgICAgICAgICBzZW5kTWVzc2FnZSh7IHR5cGU6ICdhbnN3ZXInLCBhbnN3ZXIgfSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdhbnN3ZXInOlxuICAgICAgICAgIGF3YWl0IHBlZXJDb25uZWN0aW9uLmN1cnJlbnQ/LnNldFJlbW90ZURlc2NyaXB0aW9uKG5ldyBSVENTZXNzaW9uRGVzY3JpcHRpb24obWVzc2FnZS5hbnN3ZXIpKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnaWNlLWNhbmRpZGF0ZSc6XG4gICAgICAgICAgY29uc3QgY2FuZGlkYXRlID0gbmV3IFJUQ0ljZUNhbmRpZGF0ZShtZXNzYWdlLmNhbmRpZGF0ZSk7XG4gICAgICAgICAgYXdhaXQgcGVlckNvbm5lY3Rpb24uY3VycmVudD8uYWRkSWNlQ2FuZGlkYXRlKGNhbmRpZGF0ZSk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfTtcblxuICAgIGNvbnN0IHNvY2tldCA9IGNvbm5lY3RTaWduYWxpbmdTZXJ2ZXIoaGFuZGxlU2lnbmFsaW5nTWVzc2FnZSk7XG4gICAgc2V0SXNDb25uZWN0ZWQoISFzb2NrZXQpO1xuXG4gICAgcGVlckNvbm5lY3Rpb24uY3VycmVudCA9IG5ldyBSVENQZWVyQ29ubmVjdGlvbihpY2VTZXJ2ZXJzKTtcblxuICAgIGNvbnN0IGdldFdlYmNhbVN0cmVhbSA9IGFzeW5jICgpID0+IHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHN0cmVhbSA9IGF3YWl0IG5hdmlnYXRvci5tZWRpYURldmljZXMuZ2V0VXNlck1lZGlhKHsgdmlkZW86IHRydWUgfSk7XG4gICAgICAgIGlmICh2aWRlb1JlZi5jdXJyZW50KSB2aWRlb1JlZi5jdXJyZW50LnNyY09iamVjdCA9IHN0cmVhbTtcblxuICAgICAgICBzdHJlYW0uZ2V0VHJhY2tzKCkuZm9yRWFjaCgodHJhY2spID0+IHtcbiAgICAgICAgICBpZiAocGVlckNvbm5lY3Rpb24uY3VycmVudD8uc2lnbmFsaW5nU3RhdGUgIT09ICdjbG9zZWQnKSB7XG4gICAgICAgICAgICBwZWVyQ29ubmVjdGlvbi5jdXJyZW50Py5hZGRUcmFjayh0cmFjaywgc3RyZWFtKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ+ybuey6oCDsoJHqt7wg7Jik66WYOicsIGVycik7XG4gICAgICB9XG4gICAgfTtcblxuICAgIGdldFdlYmNhbVN0cmVhbSgpO1xuXG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIGlmIChwZWVyQ29ubmVjdGlvbi5jdXJyZW50KSB7XG4gICAgICAgIHBlZXJDb25uZWN0aW9uLmN1cnJlbnQuY2xvc2UoKTtcbiAgICAgIH1cbiAgICAgIGNsb3NlU2lnbmFsaW5nU2VydmVyKCk7XG4gICAgfTtcbiAgfSwgW10pO1xuXG4gIHJldHVybiB7IHZpZGVvUmVmLCBpc0Nvbm5lY3RlZCB9O1xufTtcbiJdLCJuYW1lcyI6WyJ1c2VFZmZlY3QiLCJ1c2VSZWYiLCJ1c2VTdGF0ZSIsImNvbm5lY3RTaWduYWxpbmdTZXJ2ZXIiLCJzZW5kTWVzc2FnZSIsImNsb3NlU2lnbmFsaW5nU2VydmVyIiwiaWNlU2VydmVycyIsInVybHMiLCJ1c2VXZWJSVEMiLCJpc0Nvbm5lY3RlZCIsInNldElzQ29ubmVjdGVkIiwidmlkZW9SZWYiLCJwZWVyQ29ubmVjdGlvbiIsImhhbmRsZVNpZ25hbGluZ01lc3NhZ2UiLCJtZXNzYWdlIiwidHlwZSIsImN1cnJlbnQiLCJzZXRSZW1vdGVEZXNjcmlwdGlvbiIsIlJUQ1Nlc3Npb25EZXNjcmlwdGlvbiIsIm9mZmVyIiwiYW5zd2VyIiwiY3JlYXRlQW5zd2VyIiwic2V0TG9jYWxEZXNjcmlwdGlvbiIsImNhbmRpZGF0ZSIsIlJUQ0ljZUNhbmRpZGF0ZSIsImFkZEljZUNhbmRpZGF0ZSIsInNvY2tldCIsIlJUQ1BlZXJDb25uZWN0aW9uIiwiZ2V0V2ViY2FtU3RyZWFtIiwic3RyZWFtIiwibmF2aWdhdG9yIiwibWVkaWFEZXZpY2VzIiwiZ2V0VXNlck1lZGlhIiwidmlkZW8iLCJzcmNPYmplY3QiLCJnZXRUcmFja3MiLCJmb3JFYWNoIiwidHJhY2siLCJzaWduYWxpbmdTdGF0ZSIsImFkZFRyYWNrIiwiZXJyIiwiY29uc29sZSIsImVycm9yIiwiY2xvc2UiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/useWebRTC.ts\n"));

/***/ })

});